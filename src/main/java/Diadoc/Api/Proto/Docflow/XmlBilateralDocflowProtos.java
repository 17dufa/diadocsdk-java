// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Docflow/XmlBilateralDocflow.proto

package Diadoc.Api.Proto.Docflow;

public final class XmlBilateralDocflowProtos {
  private XmlBilateralDocflowProtos() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface XmlBilateralDocflowOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // optional bool IsFinished = 1;
    boolean hasIsFinished();
    boolean getIsFinished();
    
    // optional .Diadoc.Api.Proto.Docflow.ReceiptDocflow ReceiptDocflow = 2;
    boolean hasReceiptDocflow();
    Diadoc.Api.Proto.Docflow.ReceiptDocflowProtos.ReceiptDocflow getReceiptDocflow();
    Diadoc.Api.Proto.Docflow.ReceiptDocflowProtos.ReceiptDocflowOrBuilder getReceiptDocflowOrBuilder();
    
    // optional .Diadoc.Api.Proto.Docflow.BuyerTitleDocflow BuyerTitleDocflow = 3;
    boolean hasBuyerTitleDocflow();
    Diadoc.Api.Proto.Docflow.XmlBilateralDocflowProtos.BuyerTitleDocflow getBuyerTitleDocflow();
    Diadoc.Api.Proto.Docflow.XmlBilateralDocflowProtos.BuyerTitleDocflowOrBuilder getBuyerTitleDocflowOrBuilder();
    
    // optional .Diadoc.Api.Proto.Docflow.RecipientSignatureRejectionDocflow RecipientSignatureRejectionDocflow = 4;
    boolean hasRecipientSignatureRejectionDocflow();
    Diadoc.Api.Proto.Docflow.RecipientSignatureRejectionDocflowProtos.RecipientSignatureRejectionDocflow getRecipientSignatureRejectionDocflow();
    Diadoc.Api.Proto.Docflow.RecipientSignatureRejectionDocflowProtos.RecipientSignatureRejectionDocflowOrBuilder getRecipientSignatureRejectionDocflowOrBuilder();
    
    // optional bool IsReceiptRequested = 5;
    boolean hasIsReceiptRequested();
    boolean getIsReceiptRequested();
    
    // optional bool IsDocumentSignedByRecipient = 6;
    boolean hasIsDocumentSignedByRecipient();
    boolean getIsDocumentSignedByRecipient();
    
    // optional bool IsDocumentRejectedByRecipient = 7;
    boolean hasIsDocumentRejectedByRecipient();
    boolean getIsDocumentRejectedByRecipient();
    
    // optional bool CanDocumentBeReceipted = 8;
    boolean hasCanDocumentBeReceipted();
    boolean getCanDocumentBeReceipted();
    
    // optional bool CanDocumentBeSignedBySender = 9;
    boolean hasCanDocumentBeSignedBySender();
    boolean getCanDocumentBeSignedBySender();
    
    // optional bool CanDocumentBeSignedOrRejectedByRecipient = 10;
    boolean hasCanDocumentBeSignedOrRejectedByRecipient();
    boolean getCanDocumentBeSignedOrRejectedByRecipient();
  }
  public static final class XmlBilateralDocflow extends
      com.google.protobuf.GeneratedMessage
      implements XmlBilateralDocflowOrBuilder {
    // Use XmlBilateralDocflow.newBuilder() to construct.
    private XmlBilateralDocflow(Builder builder) {
      super(builder);
    }
    private XmlBilateralDocflow(boolean noInit) {}
    
    private static final XmlBilateralDocflow defaultInstance;
    public static XmlBilateralDocflow getDefaultInstance() {
      return defaultInstance;
    }
    
    public XmlBilateralDocflow getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return Diadoc.Api.Proto.Docflow.XmlBilateralDocflowProtos.internal_static_Diadoc_Api_Proto_Docflow_XmlBilateralDocflow_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return Diadoc.Api.Proto.Docflow.XmlBilateralDocflowProtos.internal_static_Diadoc_Api_Proto_Docflow_XmlBilateralDocflow_fieldAccessorTable;
    }
    
    private int bitField0_;
    // optional bool IsFinished = 1;
    public static final int ISFINISHED_FIELD_NUMBER = 1;
    private boolean isFinished_;
    public boolean hasIsFinished() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public boolean getIsFinished() {
      return isFinished_;
    }
    
    // optional .Diadoc.Api.Proto.Docflow.ReceiptDocflow ReceiptDocflow = 2;
    public static final int RECEIPTDOCFLOW_FIELD_NUMBER = 2;
    private Diadoc.Api.Proto.Docflow.ReceiptDocflowProtos.ReceiptDocflow receiptDocflow_;
    public boolean hasReceiptDocflow() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public Diadoc.Api.Proto.Docflow.ReceiptDocflowProtos.ReceiptDocflow getReceiptDocflow() {
      return receiptDocflow_;
    }
    public Diadoc.Api.Proto.Docflow.ReceiptDocflowProtos.ReceiptDocflowOrBuilder getReceiptDocflowOrBuilder() {
      return receiptDocflow_;
    }
    
    // optional .Diadoc.Api.Proto.Docflow.BuyerTitleDocflow BuyerTitleDocflow = 3;
    public static final int BUYERTITLEDOCFLOW_FIELD_NUMBER = 3;
    private Diadoc.Api.Proto.Docflow.XmlBilateralDocflowProtos.BuyerTitleDocflow buyerTitleDocflow_;
    public boolean hasBuyerTitleDocflow() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public Diadoc.Api.Proto.Docflow.XmlBilateralDocflowProtos.BuyerTitleDocflow getBuyerTitleDocflow() {
      return buyerTitleDocflow_;
    }
    public Diadoc.Api.Proto.Docflow.XmlBilateralDocflowProtos.BuyerTitleDocflowOrBuilder getBuyerTitleDocflowOrBuilder() {
      return buyerTitleDocflow_;
    }
    
    // optional .Diadoc.Api.Proto.Docflow.RecipientSignatureRejectionDocflow RecipientSignatureRejectionDocflow = 4;
    public static final int RECIPIENTSIGNATUREREJECTIONDOCFLOW_FIELD_NUMBER = 4;
    private Diadoc.Api.Proto.Docflow.RecipientSignatureRejectionDocflowProtos.RecipientSignatureRejectionDocflow recipientSignatureRejectionDocflow_;
    public boolean hasRecipientSignatureRejectionDocflow() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    public Diadoc.Api.Proto.Docflow.RecipientSignatureRejectionDocflowProtos.RecipientSignatureRejectionDocflow getRecipientSignatureRejectionDocflow() {
      return recipientSignatureRejectionDocflow_;
    }
    public Diadoc.Api.Proto.Docflow.RecipientSignatureRejectionDocflowProtos.RecipientSignatureRejectionDocflowOrBuilder getRecipientSignatureRejectionDocflowOrBuilder() {
      return recipientSignatureRejectionDocflow_;
    }
    
    // optional bool IsReceiptRequested = 5;
    public static final int ISRECEIPTREQUESTED_FIELD_NUMBER = 5;
    private boolean isReceiptRequested_;
    public boolean hasIsReceiptRequested() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    public boolean getIsReceiptRequested() {
      return isReceiptRequested_;
    }
    
    // optional bool IsDocumentSignedByRecipient = 6;
    public static final int ISDOCUMENTSIGNEDBYRECIPIENT_FIELD_NUMBER = 6;
    private boolean isDocumentSignedByRecipient_;
    public boolean hasIsDocumentSignedByRecipient() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    public boolean getIsDocumentSignedByRecipient() {
      return isDocumentSignedByRecipient_;
    }
    
    // optional bool IsDocumentRejectedByRecipient = 7;
    public static final int ISDOCUMENTREJECTEDBYRECIPIENT_FIELD_NUMBER = 7;
    private boolean isDocumentRejectedByRecipient_;
    public boolean hasIsDocumentRejectedByRecipient() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    public boolean getIsDocumentRejectedByRecipient() {
      return isDocumentRejectedByRecipient_;
    }
    
    // optional bool CanDocumentBeReceipted = 8;
    public static final int CANDOCUMENTBERECEIPTED_FIELD_NUMBER = 8;
    private boolean canDocumentBeReceipted_;
    public boolean hasCanDocumentBeReceipted() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    public boolean getCanDocumentBeReceipted() {
      return canDocumentBeReceipted_;
    }
    
    // optional bool CanDocumentBeSignedBySender = 9;
    public static final int CANDOCUMENTBESIGNEDBYSENDER_FIELD_NUMBER = 9;
    private boolean canDocumentBeSignedBySender_;
    public boolean hasCanDocumentBeSignedBySender() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    public boolean getCanDocumentBeSignedBySender() {
      return canDocumentBeSignedBySender_;
    }
    
    // optional bool CanDocumentBeSignedOrRejectedByRecipient = 10;
    public static final int CANDOCUMENTBESIGNEDORREJECTEDBYRECIPIENT_FIELD_NUMBER = 10;
    private boolean canDocumentBeSignedOrRejectedByRecipient_;
    public boolean hasCanDocumentBeSignedOrRejectedByRecipient() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    public boolean getCanDocumentBeSignedOrRejectedByRecipient() {
      return canDocumentBeSignedOrRejectedByRecipient_;
    }
    
    private void initFields() {
      isFinished_ = false;
      receiptDocflow_ = Diadoc.Api.Proto.Docflow.ReceiptDocflowProtos.ReceiptDocflow.getDefaultInstance();
      buyerTitleDocflow_ = Diadoc.Api.Proto.Docflow.XmlBilateralDocflowProtos.BuyerTitleDocflow.getDefaultInstance();
      recipientSignatureRejectionDocflow_ = Diadoc.Api.Proto.Docflow.RecipientSignatureRejectionDocflowProtos.RecipientSignatureRejectionDocflow.getDefaultInstance();
      isReceiptRequested_ = false;
      isDocumentSignedByRecipient_ = false;
      isDocumentRejectedByRecipient_ = false;
      canDocumentBeReceipted_ = false;
      canDocumentBeSignedBySender_ = false;
      canDocumentBeSignedOrRejectedByRecipient_ = false;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (hasReceiptDocflow()) {
        if (!getReceiptDocflow().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasBuyerTitleDocflow()) {
        if (!getBuyerTitleDocflow().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasRecipientSignatureRejectionDocflow()) {
        if (!getRecipientSignatureRejectionDocflow().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBool(1, isFinished_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, receiptDocflow_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeMessage(3, buyerTitleDocflow_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeMessage(4, recipientSignatureRejectionDocflow_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeBool(5, isReceiptRequested_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeBool(6, isDocumentSignedByRecipient_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeBool(7, isDocumentRejectedByRecipient_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeBool(8, canDocumentBeReceipted_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeBool(9, canDocumentBeSignedBySender_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeBool(10, canDocumentBeSignedOrRejectedByRecipient_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1, isFinished_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, receiptDocflow_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, buyerTitleDocflow_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, recipientSignatureRejectionDocflow_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(5, isReceiptRequested_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(6, isDocumentSignedByRecipient_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(7, isDocumentRejectedByRecipient_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(8, canDocumentBeReceipted_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(9, canDocumentBeSignedBySender_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(10, canDocumentBeSignedOrRejectedByRecipient_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static Diadoc.Api.Proto.Docflow.XmlBilateralDocflowProtos.XmlBilateralDocflow parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static Diadoc.Api.Proto.Docflow.XmlBilateralDocflowProtos.XmlBilateralDocflow parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static Diadoc.Api.Proto.Docflow.XmlBilateralDocflowProtos.XmlBilateralDocflow parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static Diadoc.Api.Proto.Docflow.XmlBilateralDocflowProtos.XmlBilateralDocflow parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static Diadoc.Api.Proto.Docflow.XmlBilateralDocflowProtos.XmlBilateralDocflow parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static Diadoc.Api.Proto.Docflow.XmlBilateralDocflowProtos.XmlBilateralDocflow parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static Diadoc.Api.Proto.Docflow.XmlBilateralDocflowProtos.XmlBilateralDocflow parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static Diadoc.Api.Proto.Docflow.XmlBilateralDocflowProtos.XmlBilateralDocflow parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static Diadoc.Api.Proto.Docflow.XmlBilateralDocflowProtos.XmlBilateralDocflow parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static Diadoc.Api.Proto.Docflow.XmlBilateralDocflowProtos.XmlBilateralDocflow parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(Diadoc.Api.Proto.Docflow.XmlBilateralDocflowProtos.XmlBilateralDocflow prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements Diadoc.Api.Proto.Docflow.XmlBilateralDocflowProtos.XmlBilateralDocflowOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return Diadoc.Api.Proto.Docflow.XmlBilateralDocflowProtos.internal_static_Diadoc_Api_Proto_Docflow_XmlBilateralDocflow_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return Diadoc.Api.Proto.Docflow.XmlBilateralDocflowProtos.internal_static_Diadoc_Api_Proto_Docflow_XmlBilateralDocflow_fieldAccessorTable;
      }
      
      // Construct using Diadoc.Api.Proto.Docflow.XmlBilateralDocflowProtos.XmlBilateralDocflow.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getReceiptDocflowFieldBuilder();
          getBuyerTitleDocflowFieldBuilder();
          getRecipientSignatureRejectionDocflowFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        isFinished_ = false;
        bitField0_ = (bitField0_ & ~0x00000001);
        if (receiptDocflowBuilder_ == null) {
          receiptDocflow_ = Diadoc.Api.Proto.Docflow.ReceiptDocflowProtos.ReceiptDocflow.getDefaultInstance();
        } else {
          receiptDocflowBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        if (buyerTitleDocflowBuilder_ == null) {
          buyerTitleDocflow_ = Diadoc.Api.Proto.Docflow.XmlBilateralDocflowProtos.BuyerTitleDocflow.getDefaultInstance();
        } else {
          buyerTitleDocflowBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        if (recipientSignatureRejectionDocflowBuilder_ == null) {
          recipientSignatureRejectionDocflow_ = Diadoc.Api.Proto.Docflow.RecipientSignatureRejectionDocflowProtos.RecipientSignatureRejectionDocflow.getDefaultInstance();
        } else {
          recipientSignatureRejectionDocflowBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        isReceiptRequested_ = false;
        bitField0_ = (bitField0_ & ~0x00000010);
        isDocumentSignedByRecipient_ = false;
        bitField0_ = (bitField0_ & ~0x00000020);
        isDocumentRejectedByRecipient_ = false;
        bitField0_ = (bitField0_ & ~0x00000040);
        canDocumentBeReceipted_ = false;
        bitField0_ = (bitField0_ & ~0x00000080);
        canDocumentBeSignedBySender_ = false;
        bitField0_ = (bitField0_ & ~0x00000100);
        canDocumentBeSignedOrRejectedByRecipient_ = false;
        bitField0_ = (bitField0_ & ~0x00000200);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return Diadoc.Api.Proto.Docflow.XmlBilateralDocflowProtos.XmlBilateralDocflow.getDescriptor();
      }
      
      public Diadoc.Api.Proto.Docflow.XmlBilateralDocflowProtos.XmlBilateralDocflow getDefaultInstanceForType() {
        return Diadoc.Api.Proto.Docflow.XmlBilateralDocflowProtos.XmlBilateralDocflow.getDefaultInstance();
      }
      
      public Diadoc.Api.Proto.Docflow.XmlBilateralDocflowProtos.XmlBilateralDocflow build() {
        Diadoc.Api.Proto.Docflow.XmlBilateralDocflowProtos.XmlBilateralDocflow result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private Diadoc.Api.Proto.Docflow.XmlBilateralDocflowProtos.XmlBilateralDocflow buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        Diadoc.Api.Proto.Docflow.XmlBilateralDocflowProtos.XmlBilateralDocflow result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public Diadoc.Api.Proto.Docflow.XmlBilateralDocflowProtos.XmlBilateralDocflow buildPartial() {
        Diadoc.Api.Proto.Docflow.XmlBilateralDocflowProtos.XmlBilateralDocflow result = new Diadoc.Api.Proto.Docflow.XmlBilateralDocflowProtos.XmlBilateralDocflow(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.isFinished_ = isFinished_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (receiptDocflowBuilder_ == null) {
          result.receiptDocflow_ = receiptDocflow_;
        } else {
          result.receiptDocflow_ = receiptDocflowBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        if (buyerTitleDocflowBuilder_ == null) {
          result.buyerTitleDocflow_ = buyerTitleDocflow_;
        } else {
          result.buyerTitleDocflow_ = buyerTitleDocflowBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        if (recipientSignatureRejectionDocflowBuilder_ == null) {
          result.recipientSignatureRejectionDocflow_ = recipientSignatureRejectionDocflow_;
        } else {
          result.recipientSignatureRejectionDocflow_ = recipientSignatureRejectionDocflowBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.isReceiptRequested_ = isReceiptRequested_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.isDocumentSignedByRecipient_ = isDocumentSignedByRecipient_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.isDocumentRejectedByRecipient_ = isDocumentRejectedByRecipient_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.canDocumentBeReceipted_ = canDocumentBeReceipted_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.canDocumentBeSignedBySender_ = canDocumentBeSignedBySender_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.canDocumentBeSignedOrRejectedByRecipient_ = canDocumentBeSignedOrRejectedByRecipient_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof Diadoc.Api.Proto.Docflow.XmlBilateralDocflowProtos.XmlBilateralDocflow) {
          return mergeFrom((Diadoc.Api.Proto.Docflow.XmlBilateralDocflowProtos.XmlBilateralDocflow)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(Diadoc.Api.Proto.Docflow.XmlBilateralDocflowProtos.XmlBilateralDocflow other) {
        if (other == Diadoc.Api.Proto.Docflow.XmlBilateralDocflowProtos.XmlBilateralDocflow.getDefaultInstance()) return this;
        if (other.hasIsFinished()) {
          setIsFinished(other.getIsFinished());
        }
        if (other.hasReceiptDocflow()) {
          mergeReceiptDocflow(other.getReceiptDocflow());
        }
        if (other.hasBuyerTitleDocflow()) {
          mergeBuyerTitleDocflow(other.getBuyerTitleDocflow());
        }
        if (other.hasRecipientSignatureRejectionDocflow()) {
          mergeRecipientSignatureRejectionDocflow(other.getRecipientSignatureRejectionDocflow());
        }
        if (other.hasIsReceiptRequested()) {
          setIsReceiptRequested(other.getIsReceiptRequested());
        }
        if (other.hasIsDocumentSignedByRecipient()) {
          setIsDocumentSignedByRecipient(other.getIsDocumentSignedByRecipient());
        }
        if (other.hasIsDocumentRejectedByRecipient()) {
          setIsDocumentRejectedByRecipient(other.getIsDocumentRejectedByRecipient());
        }
        if (other.hasCanDocumentBeReceipted()) {
          setCanDocumentBeReceipted(other.getCanDocumentBeReceipted());
        }
        if (other.hasCanDocumentBeSignedBySender()) {
          setCanDocumentBeSignedBySender(other.getCanDocumentBeSignedBySender());
        }
        if (other.hasCanDocumentBeSignedOrRejectedByRecipient()) {
          setCanDocumentBeSignedOrRejectedByRecipient(other.getCanDocumentBeSignedOrRejectedByRecipient());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        if (hasReceiptDocflow()) {
          if (!getReceiptDocflow().isInitialized()) {
            
            return false;
          }
        }
        if (hasBuyerTitleDocflow()) {
          if (!getBuyerTitleDocflow().isInitialized()) {
            
            return false;
          }
        }
        if (hasRecipientSignatureRejectionDocflow()) {
          if (!getRecipientSignatureRejectionDocflow().isInitialized()) {
            
            return false;
          }
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              isFinished_ = input.readBool();
              break;
            }
            case 18: {
              Diadoc.Api.Proto.Docflow.ReceiptDocflowProtos.ReceiptDocflow.Builder subBuilder = Diadoc.Api.Proto.Docflow.ReceiptDocflowProtos.ReceiptDocflow.newBuilder();
              if (hasReceiptDocflow()) {
                subBuilder.mergeFrom(getReceiptDocflow());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setReceiptDocflow(subBuilder.buildPartial());
              break;
            }
            case 26: {
              Diadoc.Api.Proto.Docflow.XmlBilateralDocflowProtos.BuyerTitleDocflow.Builder subBuilder = Diadoc.Api.Proto.Docflow.XmlBilateralDocflowProtos.BuyerTitleDocflow.newBuilder();
              if (hasBuyerTitleDocflow()) {
                subBuilder.mergeFrom(getBuyerTitleDocflow());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setBuyerTitleDocflow(subBuilder.buildPartial());
              break;
            }
            case 34: {
              Diadoc.Api.Proto.Docflow.RecipientSignatureRejectionDocflowProtos.RecipientSignatureRejectionDocflow.Builder subBuilder = Diadoc.Api.Proto.Docflow.RecipientSignatureRejectionDocflowProtos.RecipientSignatureRejectionDocflow.newBuilder();
              if (hasRecipientSignatureRejectionDocflow()) {
                subBuilder.mergeFrom(getRecipientSignatureRejectionDocflow());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setRecipientSignatureRejectionDocflow(subBuilder.buildPartial());
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              isReceiptRequested_ = input.readBool();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              isDocumentSignedByRecipient_ = input.readBool();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              isDocumentRejectedByRecipient_ = input.readBool();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000080;
              canDocumentBeReceipted_ = input.readBool();
              break;
            }
            case 72: {
              bitField0_ |= 0x00000100;
              canDocumentBeSignedBySender_ = input.readBool();
              break;
            }
            case 80: {
              bitField0_ |= 0x00000200;
              canDocumentBeSignedOrRejectedByRecipient_ = input.readBool();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional bool IsFinished = 1;
      private boolean isFinished_ ;
      public boolean hasIsFinished() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public boolean getIsFinished() {
        return isFinished_;
      }
      public Builder setIsFinished(boolean value) {
        bitField0_ |= 0x00000001;
        isFinished_ = value;
        onChanged();
        return this;
      }
      public Builder clearIsFinished() {
        bitField0_ = (bitField0_ & ~0x00000001);
        isFinished_ = false;
        onChanged();
        return this;
      }
      
      // optional .Diadoc.Api.Proto.Docflow.ReceiptDocflow ReceiptDocflow = 2;
      private Diadoc.Api.Proto.Docflow.ReceiptDocflowProtos.ReceiptDocflow receiptDocflow_ = Diadoc.Api.Proto.Docflow.ReceiptDocflowProtos.ReceiptDocflow.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          Diadoc.Api.Proto.Docflow.ReceiptDocflowProtos.ReceiptDocflow, Diadoc.Api.Proto.Docflow.ReceiptDocflowProtos.ReceiptDocflow.Builder, Diadoc.Api.Proto.Docflow.ReceiptDocflowProtos.ReceiptDocflowOrBuilder> receiptDocflowBuilder_;
      public boolean hasReceiptDocflow() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public Diadoc.Api.Proto.Docflow.ReceiptDocflowProtos.ReceiptDocflow getReceiptDocflow() {
        if (receiptDocflowBuilder_ == null) {
          return receiptDocflow_;
        } else {
          return receiptDocflowBuilder_.getMessage();
        }
      }
      public Builder setReceiptDocflow(Diadoc.Api.Proto.Docflow.ReceiptDocflowProtos.ReceiptDocflow value) {
        if (receiptDocflowBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          receiptDocflow_ = value;
          onChanged();
        } else {
          receiptDocflowBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      public Builder setReceiptDocflow(
          Diadoc.Api.Proto.Docflow.ReceiptDocflowProtos.ReceiptDocflow.Builder builderForValue) {
        if (receiptDocflowBuilder_ == null) {
          receiptDocflow_ = builderForValue.build();
          onChanged();
        } else {
          receiptDocflowBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      public Builder mergeReceiptDocflow(Diadoc.Api.Proto.Docflow.ReceiptDocflowProtos.ReceiptDocflow value) {
        if (receiptDocflowBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              receiptDocflow_ != Diadoc.Api.Proto.Docflow.ReceiptDocflowProtos.ReceiptDocflow.getDefaultInstance()) {
            receiptDocflow_ =
              Diadoc.Api.Proto.Docflow.ReceiptDocflowProtos.ReceiptDocflow.newBuilder(receiptDocflow_).mergeFrom(value).buildPartial();
          } else {
            receiptDocflow_ = value;
          }
          onChanged();
        } else {
          receiptDocflowBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      public Builder clearReceiptDocflow() {
        if (receiptDocflowBuilder_ == null) {
          receiptDocflow_ = Diadoc.Api.Proto.Docflow.ReceiptDocflowProtos.ReceiptDocflow.getDefaultInstance();
          onChanged();
        } else {
          receiptDocflowBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      public Diadoc.Api.Proto.Docflow.ReceiptDocflowProtos.ReceiptDocflow.Builder getReceiptDocflowBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getReceiptDocflowFieldBuilder().getBuilder();
      }
      public Diadoc.Api.Proto.Docflow.ReceiptDocflowProtos.ReceiptDocflowOrBuilder getReceiptDocflowOrBuilder() {
        if (receiptDocflowBuilder_ != null) {
          return receiptDocflowBuilder_.getMessageOrBuilder();
        } else {
          return receiptDocflow_;
        }
      }
      private com.google.protobuf.SingleFieldBuilder<
          Diadoc.Api.Proto.Docflow.ReceiptDocflowProtos.ReceiptDocflow, Diadoc.Api.Proto.Docflow.ReceiptDocflowProtos.ReceiptDocflow.Builder, Diadoc.Api.Proto.Docflow.ReceiptDocflowProtos.ReceiptDocflowOrBuilder> 
          getReceiptDocflowFieldBuilder() {
        if (receiptDocflowBuilder_ == null) {
          receiptDocflowBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              Diadoc.Api.Proto.Docflow.ReceiptDocflowProtos.ReceiptDocflow, Diadoc.Api.Proto.Docflow.ReceiptDocflowProtos.ReceiptDocflow.Builder, Diadoc.Api.Proto.Docflow.ReceiptDocflowProtos.ReceiptDocflowOrBuilder>(
                  receiptDocflow_,
                  getParentForChildren(),
                  isClean());
          receiptDocflow_ = null;
        }
        return receiptDocflowBuilder_;
      }
      
      // optional .Diadoc.Api.Proto.Docflow.BuyerTitleDocflow BuyerTitleDocflow = 3;
      private Diadoc.Api.Proto.Docflow.XmlBilateralDocflowProtos.BuyerTitleDocflow buyerTitleDocflow_ = Diadoc.Api.Proto.Docflow.XmlBilateralDocflowProtos.BuyerTitleDocflow.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          Diadoc.Api.Proto.Docflow.XmlBilateralDocflowProtos.BuyerTitleDocflow, Diadoc.Api.Proto.Docflow.XmlBilateralDocflowProtos.BuyerTitleDocflow.Builder, Diadoc.Api.Proto.Docflow.XmlBilateralDocflowProtos.BuyerTitleDocflowOrBuilder> buyerTitleDocflowBuilder_;
      public boolean hasBuyerTitleDocflow() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public Diadoc.Api.Proto.Docflow.XmlBilateralDocflowProtos.BuyerTitleDocflow getBuyerTitleDocflow() {
        if (buyerTitleDocflowBuilder_ == null) {
          return buyerTitleDocflow_;
        } else {
          return buyerTitleDocflowBuilder_.getMessage();
        }
      }
      public Builder setBuyerTitleDocflow(Diadoc.Api.Proto.Docflow.XmlBilateralDocflowProtos.BuyerTitleDocflow value) {
        if (buyerTitleDocflowBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          buyerTitleDocflow_ = value;
          onChanged();
        } else {
          buyerTitleDocflowBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      public Builder setBuyerTitleDocflow(
          Diadoc.Api.Proto.Docflow.XmlBilateralDocflowProtos.BuyerTitleDocflow.Builder builderForValue) {
        if (buyerTitleDocflowBuilder_ == null) {
          buyerTitleDocflow_ = builderForValue.build();
          onChanged();
        } else {
          buyerTitleDocflowBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      public Builder mergeBuyerTitleDocflow(Diadoc.Api.Proto.Docflow.XmlBilateralDocflowProtos.BuyerTitleDocflow value) {
        if (buyerTitleDocflowBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004) &&
              buyerTitleDocflow_ != Diadoc.Api.Proto.Docflow.XmlBilateralDocflowProtos.BuyerTitleDocflow.getDefaultInstance()) {
            buyerTitleDocflow_ =
              Diadoc.Api.Proto.Docflow.XmlBilateralDocflowProtos.BuyerTitleDocflow.newBuilder(buyerTitleDocflow_).mergeFrom(value).buildPartial();
          } else {
            buyerTitleDocflow_ = value;
          }
          onChanged();
        } else {
          buyerTitleDocflowBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      public Builder clearBuyerTitleDocflow() {
        if (buyerTitleDocflowBuilder_ == null) {
          buyerTitleDocflow_ = Diadoc.Api.Proto.Docflow.XmlBilateralDocflowProtos.BuyerTitleDocflow.getDefaultInstance();
          onChanged();
        } else {
          buyerTitleDocflowBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      public Diadoc.Api.Proto.Docflow.XmlBilateralDocflowProtos.BuyerTitleDocflow.Builder getBuyerTitleDocflowBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getBuyerTitleDocflowFieldBuilder().getBuilder();
      }
      public Diadoc.Api.Proto.Docflow.XmlBilateralDocflowProtos.BuyerTitleDocflowOrBuilder getBuyerTitleDocflowOrBuilder() {
        if (buyerTitleDocflowBuilder_ != null) {
          return buyerTitleDocflowBuilder_.getMessageOrBuilder();
        } else {
          return buyerTitleDocflow_;
        }
      }
      private com.google.protobuf.SingleFieldBuilder<
          Diadoc.Api.Proto.Docflow.XmlBilateralDocflowProtos.BuyerTitleDocflow, Diadoc.Api.Proto.Docflow.XmlBilateralDocflowProtos.BuyerTitleDocflow.Builder, Diadoc.Api.Proto.Docflow.XmlBilateralDocflowProtos.BuyerTitleDocflowOrBuilder> 
          getBuyerTitleDocflowFieldBuilder() {
        if (buyerTitleDocflowBuilder_ == null) {
          buyerTitleDocflowBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              Diadoc.Api.Proto.Docflow.XmlBilateralDocflowProtos.BuyerTitleDocflow, Diadoc.Api.Proto.Docflow.XmlBilateralDocflowProtos.BuyerTitleDocflow.Builder, Diadoc.Api.Proto.Docflow.XmlBilateralDocflowProtos.BuyerTitleDocflowOrBuilder>(
                  buyerTitleDocflow_,
                  getParentForChildren(),
                  isClean());
          buyerTitleDocflow_ = null;
        }
        return buyerTitleDocflowBuilder_;
      }
      
      // optional .Diadoc.Api.Proto.Docflow.RecipientSignatureRejectionDocflow RecipientSignatureRejectionDocflow = 4;
      private Diadoc.Api.Proto.Docflow.RecipientSignatureRejectionDocflowProtos.RecipientSignatureRejectionDocflow recipientSignatureRejectionDocflow_ = Diadoc.Api.Proto.Docflow.RecipientSignatureRejectionDocflowProtos.RecipientSignatureRejectionDocflow.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          Diadoc.Api.Proto.Docflow.RecipientSignatureRejectionDocflowProtos.RecipientSignatureRejectionDocflow, Diadoc.Api.Proto.Docflow.RecipientSignatureRejectionDocflowProtos.RecipientSignatureRejectionDocflow.Builder, Diadoc.Api.Proto.Docflow.RecipientSignatureRejectionDocflowProtos.RecipientSignatureRejectionDocflowOrBuilder> recipientSignatureRejectionDocflowBuilder_;
      public boolean hasRecipientSignatureRejectionDocflow() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      public Diadoc.Api.Proto.Docflow.RecipientSignatureRejectionDocflowProtos.RecipientSignatureRejectionDocflow getRecipientSignatureRejectionDocflow() {
        if (recipientSignatureRejectionDocflowBuilder_ == null) {
          return recipientSignatureRejectionDocflow_;
        } else {
          return recipientSignatureRejectionDocflowBuilder_.getMessage();
        }
      }
      public Builder setRecipientSignatureRejectionDocflow(Diadoc.Api.Proto.Docflow.RecipientSignatureRejectionDocflowProtos.RecipientSignatureRejectionDocflow value) {
        if (recipientSignatureRejectionDocflowBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          recipientSignatureRejectionDocflow_ = value;
          onChanged();
        } else {
          recipientSignatureRejectionDocflowBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      public Builder setRecipientSignatureRejectionDocflow(
          Diadoc.Api.Proto.Docflow.RecipientSignatureRejectionDocflowProtos.RecipientSignatureRejectionDocflow.Builder builderForValue) {
        if (recipientSignatureRejectionDocflowBuilder_ == null) {
          recipientSignatureRejectionDocflow_ = builderForValue.build();
          onChanged();
        } else {
          recipientSignatureRejectionDocflowBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      public Builder mergeRecipientSignatureRejectionDocflow(Diadoc.Api.Proto.Docflow.RecipientSignatureRejectionDocflowProtos.RecipientSignatureRejectionDocflow value) {
        if (recipientSignatureRejectionDocflowBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008) &&
              recipientSignatureRejectionDocflow_ != Diadoc.Api.Proto.Docflow.RecipientSignatureRejectionDocflowProtos.RecipientSignatureRejectionDocflow.getDefaultInstance()) {
            recipientSignatureRejectionDocflow_ =
              Diadoc.Api.Proto.Docflow.RecipientSignatureRejectionDocflowProtos.RecipientSignatureRejectionDocflow.newBuilder(recipientSignatureRejectionDocflow_).mergeFrom(value).buildPartial();
          } else {
            recipientSignatureRejectionDocflow_ = value;
          }
          onChanged();
        } else {
          recipientSignatureRejectionDocflowBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      public Builder clearRecipientSignatureRejectionDocflow() {
        if (recipientSignatureRejectionDocflowBuilder_ == null) {
          recipientSignatureRejectionDocflow_ = Diadoc.Api.Proto.Docflow.RecipientSignatureRejectionDocflowProtos.RecipientSignatureRejectionDocflow.getDefaultInstance();
          onChanged();
        } else {
          recipientSignatureRejectionDocflowBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }
      public Diadoc.Api.Proto.Docflow.RecipientSignatureRejectionDocflowProtos.RecipientSignatureRejectionDocflow.Builder getRecipientSignatureRejectionDocflowBuilder() {
        bitField0_ |= 0x00000008;
        onChanged();
        return getRecipientSignatureRejectionDocflowFieldBuilder().getBuilder();
      }
      public Diadoc.Api.Proto.Docflow.RecipientSignatureRejectionDocflowProtos.RecipientSignatureRejectionDocflowOrBuilder getRecipientSignatureRejectionDocflowOrBuilder() {
        if (recipientSignatureRejectionDocflowBuilder_ != null) {
          return recipientSignatureRejectionDocflowBuilder_.getMessageOrBuilder();
        } else {
          return recipientSignatureRejectionDocflow_;
        }
      }
      private com.google.protobuf.SingleFieldBuilder<
          Diadoc.Api.Proto.Docflow.RecipientSignatureRejectionDocflowProtos.RecipientSignatureRejectionDocflow, Diadoc.Api.Proto.Docflow.RecipientSignatureRejectionDocflowProtos.RecipientSignatureRejectionDocflow.Builder, Diadoc.Api.Proto.Docflow.RecipientSignatureRejectionDocflowProtos.RecipientSignatureRejectionDocflowOrBuilder> 
          getRecipientSignatureRejectionDocflowFieldBuilder() {
        if (recipientSignatureRejectionDocflowBuilder_ == null) {
          recipientSignatureRejectionDocflowBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              Diadoc.Api.Proto.Docflow.RecipientSignatureRejectionDocflowProtos.RecipientSignatureRejectionDocflow, Diadoc.Api.Proto.Docflow.RecipientSignatureRejectionDocflowProtos.RecipientSignatureRejectionDocflow.Builder, Diadoc.Api.Proto.Docflow.RecipientSignatureRejectionDocflowProtos.RecipientSignatureRejectionDocflowOrBuilder>(
                  recipientSignatureRejectionDocflow_,
                  getParentForChildren(),
                  isClean());
          recipientSignatureRejectionDocflow_ = null;
        }
        return recipientSignatureRejectionDocflowBuilder_;
      }
      
      // optional bool IsReceiptRequested = 5;
      private boolean isReceiptRequested_ ;
      public boolean hasIsReceiptRequested() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      public boolean getIsReceiptRequested() {
        return isReceiptRequested_;
      }
      public Builder setIsReceiptRequested(boolean value) {
        bitField0_ |= 0x00000010;
        isReceiptRequested_ = value;
        onChanged();
        return this;
      }
      public Builder clearIsReceiptRequested() {
        bitField0_ = (bitField0_ & ~0x00000010);
        isReceiptRequested_ = false;
        onChanged();
        return this;
      }
      
      // optional bool IsDocumentSignedByRecipient = 6;
      private boolean isDocumentSignedByRecipient_ ;
      public boolean hasIsDocumentSignedByRecipient() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      public boolean getIsDocumentSignedByRecipient() {
        return isDocumentSignedByRecipient_;
      }
      public Builder setIsDocumentSignedByRecipient(boolean value) {
        bitField0_ |= 0x00000020;
        isDocumentSignedByRecipient_ = value;
        onChanged();
        return this;
      }
      public Builder clearIsDocumentSignedByRecipient() {
        bitField0_ = (bitField0_ & ~0x00000020);
        isDocumentSignedByRecipient_ = false;
        onChanged();
        return this;
      }
      
      // optional bool IsDocumentRejectedByRecipient = 7;
      private boolean isDocumentRejectedByRecipient_ ;
      public boolean hasIsDocumentRejectedByRecipient() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      public boolean getIsDocumentRejectedByRecipient() {
        return isDocumentRejectedByRecipient_;
      }
      public Builder setIsDocumentRejectedByRecipient(boolean value) {
        bitField0_ |= 0x00000040;
        isDocumentRejectedByRecipient_ = value;
        onChanged();
        return this;
      }
      public Builder clearIsDocumentRejectedByRecipient() {
        bitField0_ = (bitField0_ & ~0x00000040);
        isDocumentRejectedByRecipient_ = false;
        onChanged();
        return this;
      }
      
      // optional bool CanDocumentBeReceipted = 8;
      private boolean canDocumentBeReceipted_ ;
      public boolean hasCanDocumentBeReceipted() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      public boolean getCanDocumentBeReceipted() {
        return canDocumentBeReceipted_;
      }
      public Builder setCanDocumentBeReceipted(boolean value) {
        bitField0_ |= 0x00000080;
        canDocumentBeReceipted_ = value;
        onChanged();
        return this;
      }
      public Builder clearCanDocumentBeReceipted() {
        bitField0_ = (bitField0_ & ~0x00000080);
        canDocumentBeReceipted_ = false;
        onChanged();
        return this;
      }
      
      // optional bool CanDocumentBeSignedBySender = 9;
      private boolean canDocumentBeSignedBySender_ ;
      public boolean hasCanDocumentBeSignedBySender() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      public boolean getCanDocumentBeSignedBySender() {
        return canDocumentBeSignedBySender_;
      }
      public Builder setCanDocumentBeSignedBySender(boolean value) {
        bitField0_ |= 0x00000100;
        canDocumentBeSignedBySender_ = value;
        onChanged();
        return this;
      }
      public Builder clearCanDocumentBeSignedBySender() {
        bitField0_ = (bitField0_ & ~0x00000100);
        canDocumentBeSignedBySender_ = false;
        onChanged();
        return this;
      }
      
      // optional bool CanDocumentBeSignedOrRejectedByRecipient = 10;
      private boolean canDocumentBeSignedOrRejectedByRecipient_ ;
      public boolean hasCanDocumentBeSignedOrRejectedByRecipient() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      public boolean getCanDocumentBeSignedOrRejectedByRecipient() {
        return canDocumentBeSignedOrRejectedByRecipient_;
      }
      public Builder setCanDocumentBeSignedOrRejectedByRecipient(boolean value) {
        bitField0_ |= 0x00000200;
        canDocumentBeSignedOrRejectedByRecipient_ = value;
        onChanged();
        return this;
      }
      public Builder clearCanDocumentBeSignedOrRejectedByRecipient() {
        bitField0_ = (bitField0_ & ~0x00000200);
        canDocumentBeSignedOrRejectedByRecipient_ = false;
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:Diadoc.Api.Proto.Docflow.XmlBilateralDocflow)
    }
    
    static {
      defaultInstance = new XmlBilateralDocflow(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:Diadoc.Api.Proto.Docflow.XmlBilateralDocflow)
  }
  
  public interface BuyerTitleDocflowOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // optional bool IsFinished = 1;
    boolean hasIsFinished();
    boolean getIsFinished();
    
    // optional .Diadoc.Api.Proto.Docflow.SignedAttachment BuyerTitleAttachment = 2;
    boolean hasBuyerTitleAttachment();
    Diadoc.Api.Proto.Docflow.AttachmentProtos.SignedAttachment getBuyerTitleAttachment();
    Diadoc.Api.Proto.Docflow.AttachmentProtos.SignedAttachmentOrBuilder getBuyerTitleAttachmentOrBuilder();
    
    // optional .Diadoc.Api.Proto.Timestamp SendTimestamp = 3;
    boolean hasSendTimestamp();
    Diadoc.Api.Proto.TimestampProtos.Timestamp getSendTimestamp();
    Diadoc.Api.Proto.TimestampProtos.TimestampOrBuilder getSendTimestampOrBuilder();
    
    // optional .Diadoc.Api.Proto.Timestamp DeliveryTimestamp = 4;
    boolean hasDeliveryTimestamp();
    Diadoc.Api.Proto.TimestampProtos.Timestamp getDeliveryTimestamp();
    Diadoc.Api.Proto.TimestampProtos.TimestampOrBuilder getDeliveryTimestampOrBuilder();
  }
  public static final class BuyerTitleDocflow extends
      com.google.protobuf.GeneratedMessage
      implements BuyerTitleDocflowOrBuilder {
    // Use BuyerTitleDocflow.newBuilder() to construct.
    private BuyerTitleDocflow(Builder builder) {
      super(builder);
    }
    private BuyerTitleDocflow(boolean noInit) {}
    
    private static final BuyerTitleDocflow defaultInstance;
    public static BuyerTitleDocflow getDefaultInstance() {
      return defaultInstance;
    }
    
    public BuyerTitleDocflow getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return Diadoc.Api.Proto.Docflow.XmlBilateralDocflowProtos.internal_static_Diadoc_Api_Proto_Docflow_BuyerTitleDocflow_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return Diadoc.Api.Proto.Docflow.XmlBilateralDocflowProtos.internal_static_Diadoc_Api_Proto_Docflow_BuyerTitleDocflow_fieldAccessorTable;
    }
    
    private int bitField0_;
    // optional bool IsFinished = 1;
    public static final int ISFINISHED_FIELD_NUMBER = 1;
    private boolean isFinished_;
    public boolean hasIsFinished() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public boolean getIsFinished() {
      return isFinished_;
    }
    
    // optional .Diadoc.Api.Proto.Docflow.SignedAttachment BuyerTitleAttachment = 2;
    public static final int BUYERTITLEATTACHMENT_FIELD_NUMBER = 2;
    private Diadoc.Api.Proto.Docflow.AttachmentProtos.SignedAttachment buyerTitleAttachment_;
    public boolean hasBuyerTitleAttachment() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public Diadoc.Api.Proto.Docflow.AttachmentProtos.SignedAttachment getBuyerTitleAttachment() {
      return buyerTitleAttachment_;
    }
    public Diadoc.Api.Proto.Docflow.AttachmentProtos.SignedAttachmentOrBuilder getBuyerTitleAttachmentOrBuilder() {
      return buyerTitleAttachment_;
    }
    
    // optional .Diadoc.Api.Proto.Timestamp SendTimestamp = 3;
    public static final int SENDTIMESTAMP_FIELD_NUMBER = 3;
    private Diadoc.Api.Proto.TimestampProtos.Timestamp sendTimestamp_;
    public boolean hasSendTimestamp() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public Diadoc.Api.Proto.TimestampProtos.Timestamp getSendTimestamp() {
      return sendTimestamp_;
    }
    public Diadoc.Api.Proto.TimestampProtos.TimestampOrBuilder getSendTimestampOrBuilder() {
      return sendTimestamp_;
    }
    
    // optional .Diadoc.Api.Proto.Timestamp DeliveryTimestamp = 4;
    public static final int DELIVERYTIMESTAMP_FIELD_NUMBER = 4;
    private Diadoc.Api.Proto.TimestampProtos.Timestamp deliveryTimestamp_;
    public boolean hasDeliveryTimestamp() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    public Diadoc.Api.Proto.TimestampProtos.Timestamp getDeliveryTimestamp() {
      return deliveryTimestamp_;
    }
    public Diadoc.Api.Proto.TimestampProtos.TimestampOrBuilder getDeliveryTimestampOrBuilder() {
      return deliveryTimestamp_;
    }
    
    private void initFields() {
      isFinished_ = false;
      buyerTitleAttachment_ = Diadoc.Api.Proto.Docflow.AttachmentProtos.SignedAttachment.getDefaultInstance();
      sendTimestamp_ = Diadoc.Api.Proto.TimestampProtos.Timestamp.getDefaultInstance();
      deliveryTimestamp_ = Diadoc.Api.Proto.TimestampProtos.Timestamp.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (hasBuyerTitleAttachment()) {
        if (!getBuyerTitleAttachment().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasSendTimestamp()) {
        if (!getSendTimestamp().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasDeliveryTimestamp()) {
        if (!getDeliveryTimestamp().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBool(1, isFinished_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, buyerTitleAttachment_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeMessage(3, sendTimestamp_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeMessage(4, deliveryTimestamp_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1, isFinished_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, buyerTitleAttachment_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, sendTimestamp_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, deliveryTimestamp_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static Diadoc.Api.Proto.Docflow.XmlBilateralDocflowProtos.BuyerTitleDocflow parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static Diadoc.Api.Proto.Docflow.XmlBilateralDocflowProtos.BuyerTitleDocflow parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static Diadoc.Api.Proto.Docflow.XmlBilateralDocflowProtos.BuyerTitleDocflow parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static Diadoc.Api.Proto.Docflow.XmlBilateralDocflowProtos.BuyerTitleDocflow parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static Diadoc.Api.Proto.Docflow.XmlBilateralDocflowProtos.BuyerTitleDocflow parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static Diadoc.Api.Proto.Docflow.XmlBilateralDocflowProtos.BuyerTitleDocflow parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static Diadoc.Api.Proto.Docflow.XmlBilateralDocflowProtos.BuyerTitleDocflow parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static Diadoc.Api.Proto.Docflow.XmlBilateralDocflowProtos.BuyerTitleDocflow parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static Diadoc.Api.Proto.Docflow.XmlBilateralDocflowProtos.BuyerTitleDocflow parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static Diadoc.Api.Proto.Docflow.XmlBilateralDocflowProtos.BuyerTitleDocflow parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(Diadoc.Api.Proto.Docflow.XmlBilateralDocflowProtos.BuyerTitleDocflow prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements Diadoc.Api.Proto.Docflow.XmlBilateralDocflowProtos.BuyerTitleDocflowOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return Diadoc.Api.Proto.Docflow.XmlBilateralDocflowProtos.internal_static_Diadoc_Api_Proto_Docflow_BuyerTitleDocflow_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return Diadoc.Api.Proto.Docflow.XmlBilateralDocflowProtos.internal_static_Diadoc_Api_Proto_Docflow_BuyerTitleDocflow_fieldAccessorTable;
      }
      
      // Construct using Diadoc.Api.Proto.Docflow.XmlBilateralDocflowProtos.BuyerTitleDocflow.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getBuyerTitleAttachmentFieldBuilder();
          getSendTimestampFieldBuilder();
          getDeliveryTimestampFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        isFinished_ = false;
        bitField0_ = (bitField0_ & ~0x00000001);
        if (buyerTitleAttachmentBuilder_ == null) {
          buyerTitleAttachment_ = Diadoc.Api.Proto.Docflow.AttachmentProtos.SignedAttachment.getDefaultInstance();
        } else {
          buyerTitleAttachmentBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        if (sendTimestampBuilder_ == null) {
          sendTimestamp_ = Diadoc.Api.Proto.TimestampProtos.Timestamp.getDefaultInstance();
        } else {
          sendTimestampBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        if (deliveryTimestampBuilder_ == null) {
          deliveryTimestamp_ = Diadoc.Api.Proto.TimestampProtos.Timestamp.getDefaultInstance();
        } else {
          deliveryTimestampBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return Diadoc.Api.Proto.Docflow.XmlBilateralDocflowProtos.BuyerTitleDocflow.getDescriptor();
      }
      
      public Diadoc.Api.Proto.Docflow.XmlBilateralDocflowProtos.BuyerTitleDocflow getDefaultInstanceForType() {
        return Diadoc.Api.Proto.Docflow.XmlBilateralDocflowProtos.BuyerTitleDocflow.getDefaultInstance();
      }
      
      public Diadoc.Api.Proto.Docflow.XmlBilateralDocflowProtos.BuyerTitleDocflow build() {
        Diadoc.Api.Proto.Docflow.XmlBilateralDocflowProtos.BuyerTitleDocflow result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private Diadoc.Api.Proto.Docflow.XmlBilateralDocflowProtos.BuyerTitleDocflow buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        Diadoc.Api.Proto.Docflow.XmlBilateralDocflowProtos.BuyerTitleDocflow result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public Diadoc.Api.Proto.Docflow.XmlBilateralDocflowProtos.BuyerTitleDocflow buildPartial() {
        Diadoc.Api.Proto.Docflow.XmlBilateralDocflowProtos.BuyerTitleDocflow result = new Diadoc.Api.Proto.Docflow.XmlBilateralDocflowProtos.BuyerTitleDocflow(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.isFinished_ = isFinished_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (buyerTitleAttachmentBuilder_ == null) {
          result.buyerTitleAttachment_ = buyerTitleAttachment_;
        } else {
          result.buyerTitleAttachment_ = buyerTitleAttachmentBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        if (sendTimestampBuilder_ == null) {
          result.sendTimestamp_ = sendTimestamp_;
        } else {
          result.sendTimestamp_ = sendTimestampBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        if (deliveryTimestampBuilder_ == null) {
          result.deliveryTimestamp_ = deliveryTimestamp_;
        } else {
          result.deliveryTimestamp_ = deliveryTimestampBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof Diadoc.Api.Proto.Docflow.XmlBilateralDocflowProtos.BuyerTitleDocflow) {
          return mergeFrom((Diadoc.Api.Proto.Docflow.XmlBilateralDocflowProtos.BuyerTitleDocflow)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(Diadoc.Api.Proto.Docflow.XmlBilateralDocflowProtos.BuyerTitleDocflow other) {
        if (other == Diadoc.Api.Proto.Docflow.XmlBilateralDocflowProtos.BuyerTitleDocflow.getDefaultInstance()) return this;
        if (other.hasIsFinished()) {
          setIsFinished(other.getIsFinished());
        }
        if (other.hasBuyerTitleAttachment()) {
          mergeBuyerTitleAttachment(other.getBuyerTitleAttachment());
        }
        if (other.hasSendTimestamp()) {
          mergeSendTimestamp(other.getSendTimestamp());
        }
        if (other.hasDeliveryTimestamp()) {
          mergeDeliveryTimestamp(other.getDeliveryTimestamp());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        if (hasBuyerTitleAttachment()) {
          if (!getBuyerTitleAttachment().isInitialized()) {
            
            return false;
          }
        }
        if (hasSendTimestamp()) {
          if (!getSendTimestamp().isInitialized()) {
            
            return false;
          }
        }
        if (hasDeliveryTimestamp()) {
          if (!getDeliveryTimestamp().isInitialized()) {
            
            return false;
          }
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              isFinished_ = input.readBool();
              break;
            }
            case 18: {
              Diadoc.Api.Proto.Docflow.AttachmentProtos.SignedAttachment.Builder subBuilder = Diadoc.Api.Proto.Docflow.AttachmentProtos.SignedAttachment.newBuilder();
              if (hasBuyerTitleAttachment()) {
                subBuilder.mergeFrom(getBuyerTitleAttachment());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setBuyerTitleAttachment(subBuilder.buildPartial());
              break;
            }
            case 26: {
              Diadoc.Api.Proto.TimestampProtos.Timestamp.Builder subBuilder = Diadoc.Api.Proto.TimestampProtos.Timestamp.newBuilder();
              if (hasSendTimestamp()) {
                subBuilder.mergeFrom(getSendTimestamp());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setSendTimestamp(subBuilder.buildPartial());
              break;
            }
            case 34: {
              Diadoc.Api.Proto.TimestampProtos.Timestamp.Builder subBuilder = Diadoc.Api.Proto.TimestampProtos.Timestamp.newBuilder();
              if (hasDeliveryTimestamp()) {
                subBuilder.mergeFrom(getDeliveryTimestamp());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setDeliveryTimestamp(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional bool IsFinished = 1;
      private boolean isFinished_ ;
      public boolean hasIsFinished() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public boolean getIsFinished() {
        return isFinished_;
      }
      public Builder setIsFinished(boolean value) {
        bitField0_ |= 0x00000001;
        isFinished_ = value;
        onChanged();
        return this;
      }
      public Builder clearIsFinished() {
        bitField0_ = (bitField0_ & ~0x00000001);
        isFinished_ = false;
        onChanged();
        return this;
      }
      
      // optional .Diadoc.Api.Proto.Docflow.SignedAttachment BuyerTitleAttachment = 2;
      private Diadoc.Api.Proto.Docflow.AttachmentProtos.SignedAttachment buyerTitleAttachment_ = Diadoc.Api.Proto.Docflow.AttachmentProtos.SignedAttachment.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          Diadoc.Api.Proto.Docflow.AttachmentProtos.SignedAttachment, Diadoc.Api.Proto.Docflow.AttachmentProtos.SignedAttachment.Builder, Diadoc.Api.Proto.Docflow.AttachmentProtos.SignedAttachmentOrBuilder> buyerTitleAttachmentBuilder_;
      public boolean hasBuyerTitleAttachment() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public Diadoc.Api.Proto.Docflow.AttachmentProtos.SignedAttachment getBuyerTitleAttachment() {
        if (buyerTitleAttachmentBuilder_ == null) {
          return buyerTitleAttachment_;
        } else {
          return buyerTitleAttachmentBuilder_.getMessage();
        }
      }
      public Builder setBuyerTitleAttachment(Diadoc.Api.Proto.Docflow.AttachmentProtos.SignedAttachment value) {
        if (buyerTitleAttachmentBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          buyerTitleAttachment_ = value;
          onChanged();
        } else {
          buyerTitleAttachmentBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      public Builder setBuyerTitleAttachment(
          Diadoc.Api.Proto.Docflow.AttachmentProtos.SignedAttachment.Builder builderForValue) {
        if (buyerTitleAttachmentBuilder_ == null) {
          buyerTitleAttachment_ = builderForValue.build();
          onChanged();
        } else {
          buyerTitleAttachmentBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      public Builder mergeBuyerTitleAttachment(Diadoc.Api.Proto.Docflow.AttachmentProtos.SignedAttachment value) {
        if (buyerTitleAttachmentBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              buyerTitleAttachment_ != Diadoc.Api.Proto.Docflow.AttachmentProtos.SignedAttachment.getDefaultInstance()) {
            buyerTitleAttachment_ =
              Diadoc.Api.Proto.Docflow.AttachmentProtos.SignedAttachment.newBuilder(buyerTitleAttachment_).mergeFrom(value).buildPartial();
          } else {
            buyerTitleAttachment_ = value;
          }
          onChanged();
        } else {
          buyerTitleAttachmentBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      public Builder clearBuyerTitleAttachment() {
        if (buyerTitleAttachmentBuilder_ == null) {
          buyerTitleAttachment_ = Diadoc.Api.Proto.Docflow.AttachmentProtos.SignedAttachment.getDefaultInstance();
          onChanged();
        } else {
          buyerTitleAttachmentBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      public Diadoc.Api.Proto.Docflow.AttachmentProtos.SignedAttachment.Builder getBuyerTitleAttachmentBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getBuyerTitleAttachmentFieldBuilder().getBuilder();
      }
      public Diadoc.Api.Proto.Docflow.AttachmentProtos.SignedAttachmentOrBuilder getBuyerTitleAttachmentOrBuilder() {
        if (buyerTitleAttachmentBuilder_ != null) {
          return buyerTitleAttachmentBuilder_.getMessageOrBuilder();
        } else {
          return buyerTitleAttachment_;
        }
      }
      private com.google.protobuf.SingleFieldBuilder<
          Diadoc.Api.Proto.Docflow.AttachmentProtos.SignedAttachment, Diadoc.Api.Proto.Docflow.AttachmentProtos.SignedAttachment.Builder, Diadoc.Api.Proto.Docflow.AttachmentProtos.SignedAttachmentOrBuilder> 
          getBuyerTitleAttachmentFieldBuilder() {
        if (buyerTitleAttachmentBuilder_ == null) {
          buyerTitleAttachmentBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              Diadoc.Api.Proto.Docflow.AttachmentProtos.SignedAttachment, Diadoc.Api.Proto.Docflow.AttachmentProtos.SignedAttachment.Builder, Diadoc.Api.Proto.Docflow.AttachmentProtos.SignedAttachmentOrBuilder>(
                  buyerTitleAttachment_,
                  getParentForChildren(),
                  isClean());
          buyerTitleAttachment_ = null;
        }
        return buyerTitleAttachmentBuilder_;
      }
      
      // optional .Diadoc.Api.Proto.Timestamp SendTimestamp = 3;
      private Diadoc.Api.Proto.TimestampProtos.Timestamp sendTimestamp_ = Diadoc.Api.Proto.TimestampProtos.Timestamp.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          Diadoc.Api.Proto.TimestampProtos.Timestamp, Diadoc.Api.Proto.TimestampProtos.Timestamp.Builder, Diadoc.Api.Proto.TimestampProtos.TimestampOrBuilder> sendTimestampBuilder_;
      public boolean hasSendTimestamp() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public Diadoc.Api.Proto.TimestampProtos.Timestamp getSendTimestamp() {
        if (sendTimestampBuilder_ == null) {
          return sendTimestamp_;
        } else {
          return sendTimestampBuilder_.getMessage();
        }
      }
      public Builder setSendTimestamp(Diadoc.Api.Proto.TimestampProtos.Timestamp value) {
        if (sendTimestampBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          sendTimestamp_ = value;
          onChanged();
        } else {
          sendTimestampBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      public Builder setSendTimestamp(
          Diadoc.Api.Proto.TimestampProtos.Timestamp.Builder builderForValue) {
        if (sendTimestampBuilder_ == null) {
          sendTimestamp_ = builderForValue.build();
          onChanged();
        } else {
          sendTimestampBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      public Builder mergeSendTimestamp(Diadoc.Api.Proto.TimestampProtos.Timestamp value) {
        if (sendTimestampBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004) &&
              sendTimestamp_ != Diadoc.Api.Proto.TimestampProtos.Timestamp.getDefaultInstance()) {
            sendTimestamp_ =
              Diadoc.Api.Proto.TimestampProtos.Timestamp.newBuilder(sendTimestamp_).mergeFrom(value).buildPartial();
          } else {
            sendTimestamp_ = value;
          }
          onChanged();
        } else {
          sendTimestampBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      public Builder clearSendTimestamp() {
        if (sendTimestampBuilder_ == null) {
          sendTimestamp_ = Diadoc.Api.Proto.TimestampProtos.Timestamp.getDefaultInstance();
          onChanged();
        } else {
          sendTimestampBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      public Diadoc.Api.Proto.TimestampProtos.Timestamp.Builder getSendTimestampBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getSendTimestampFieldBuilder().getBuilder();
      }
      public Diadoc.Api.Proto.TimestampProtos.TimestampOrBuilder getSendTimestampOrBuilder() {
        if (sendTimestampBuilder_ != null) {
          return sendTimestampBuilder_.getMessageOrBuilder();
        } else {
          return sendTimestamp_;
        }
      }
      private com.google.protobuf.SingleFieldBuilder<
          Diadoc.Api.Proto.TimestampProtos.Timestamp, Diadoc.Api.Proto.TimestampProtos.Timestamp.Builder, Diadoc.Api.Proto.TimestampProtos.TimestampOrBuilder> 
          getSendTimestampFieldBuilder() {
        if (sendTimestampBuilder_ == null) {
          sendTimestampBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              Diadoc.Api.Proto.TimestampProtos.Timestamp, Diadoc.Api.Proto.TimestampProtos.Timestamp.Builder, Diadoc.Api.Proto.TimestampProtos.TimestampOrBuilder>(
                  sendTimestamp_,
                  getParentForChildren(),
                  isClean());
          sendTimestamp_ = null;
        }
        return sendTimestampBuilder_;
      }
      
      // optional .Diadoc.Api.Proto.Timestamp DeliveryTimestamp = 4;
      private Diadoc.Api.Proto.TimestampProtos.Timestamp deliveryTimestamp_ = Diadoc.Api.Proto.TimestampProtos.Timestamp.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          Diadoc.Api.Proto.TimestampProtos.Timestamp, Diadoc.Api.Proto.TimestampProtos.Timestamp.Builder, Diadoc.Api.Proto.TimestampProtos.TimestampOrBuilder> deliveryTimestampBuilder_;
      public boolean hasDeliveryTimestamp() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      public Diadoc.Api.Proto.TimestampProtos.Timestamp getDeliveryTimestamp() {
        if (deliveryTimestampBuilder_ == null) {
          return deliveryTimestamp_;
        } else {
          return deliveryTimestampBuilder_.getMessage();
        }
      }
      public Builder setDeliveryTimestamp(Diadoc.Api.Proto.TimestampProtos.Timestamp value) {
        if (deliveryTimestampBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          deliveryTimestamp_ = value;
          onChanged();
        } else {
          deliveryTimestampBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      public Builder setDeliveryTimestamp(
          Diadoc.Api.Proto.TimestampProtos.Timestamp.Builder builderForValue) {
        if (deliveryTimestampBuilder_ == null) {
          deliveryTimestamp_ = builderForValue.build();
          onChanged();
        } else {
          deliveryTimestampBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      public Builder mergeDeliveryTimestamp(Diadoc.Api.Proto.TimestampProtos.Timestamp value) {
        if (deliveryTimestampBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008) &&
              deliveryTimestamp_ != Diadoc.Api.Proto.TimestampProtos.Timestamp.getDefaultInstance()) {
            deliveryTimestamp_ =
              Diadoc.Api.Proto.TimestampProtos.Timestamp.newBuilder(deliveryTimestamp_).mergeFrom(value).buildPartial();
          } else {
            deliveryTimestamp_ = value;
          }
          onChanged();
        } else {
          deliveryTimestampBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      public Builder clearDeliveryTimestamp() {
        if (deliveryTimestampBuilder_ == null) {
          deliveryTimestamp_ = Diadoc.Api.Proto.TimestampProtos.Timestamp.getDefaultInstance();
          onChanged();
        } else {
          deliveryTimestampBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }
      public Diadoc.Api.Proto.TimestampProtos.Timestamp.Builder getDeliveryTimestampBuilder() {
        bitField0_ |= 0x00000008;
        onChanged();
        return getDeliveryTimestampFieldBuilder().getBuilder();
      }
      public Diadoc.Api.Proto.TimestampProtos.TimestampOrBuilder getDeliveryTimestampOrBuilder() {
        if (deliveryTimestampBuilder_ != null) {
          return deliveryTimestampBuilder_.getMessageOrBuilder();
        } else {
          return deliveryTimestamp_;
        }
      }
      private com.google.protobuf.SingleFieldBuilder<
          Diadoc.Api.Proto.TimestampProtos.Timestamp, Diadoc.Api.Proto.TimestampProtos.Timestamp.Builder, Diadoc.Api.Proto.TimestampProtos.TimestampOrBuilder> 
          getDeliveryTimestampFieldBuilder() {
        if (deliveryTimestampBuilder_ == null) {
          deliveryTimestampBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              Diadoc.Api.Proto.TimestampProtos.Timestamp, Diadoc.Api.Proto.TimestampProtos.Timestamp.Builder, Diadoc.Api.Proto.TimestampProtos.TimestampOrBuilder>(
                  deliveryTimestamp_,
                  getParentForChildren(),
                  isClean());
          deliveryTimestamp_ = null;
        }
        return deliveryTimestampBuilder_;
      }
      
      // @@protoc_insertion_point(builder_scope:Diadoc.Api.Proto.Docflow.BuyerTitleDocflow)
    }
    
    static {
      defaultInstance = new BuyerTitleDocflow(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:Diadoc.Api.Proto.Docflow.BuyerTitleDocflow)
  }
  
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_Diadoc_Api_Proto_Docflow_XmlBilateralDocflow_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_Diadoc_Api_Proto_Docflow_XmlBilateralDocflow_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_Diadoc_Api_Proto_Docflow_BuyerTitleDocflow_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_Diadoc_Api_Proto_Docflow_BuyerTitleDocflow_fieldAccessorTable;
  
  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n!Docflow/XmlBilateralDocflow.proto\022\030Dia" +
      "doc.Api.Proto.Docflow\032\017Timestamp.proto\032\030" +
      "Docflow/Attachment.proto\032\034Docflow/Receip" +
      "tDocflow.proto\0320Docflow/RecipientSignatu" +
      "reRejectionDocflow.proto\"\374\003\n\023XmlBilatera" +
      "lDocflow\022\022\n\nIsFinished\030\001 \001(\010\022@\n\016ReceiptD" +
      "ocflow\030\002 \001(\0132(.Diadoc.Api.Proto.Docflow." +
      "ReceiptDocflow\022F\n\021BuyerTitleDocflow\030\003 \001(" +
      "\0132+.Diadoc.Api.Proto.Docflow.BuyerTitleD" +
      "ocflow\022h\n\"RecipientSignatureRejectionDoc",
      "flow\030\004 \001(\0132<.Diadoc.Api.Proto.Docflow.Re" +
      "cipientSignatureRejectionDocflow\022\032\n\022IsRe" +
      "ceiptRequested\030\005 \001(\010\022#\n\033IsDocumentSigned" +
      "ByRecipient\030\006 \001(\010\022%\n\035IsDocumentRejectedB" +
      "yRecipient\030\007 \001(\010\022\036\n\026CanDocumentBeReceipt" +
      "ed\030\010 \001(\010\022#\n\033CanDocumentBeSignedBySender\030" +
      "\t \001(\010\0220\n(CanDocumentBeSignedOrRejectedBy" +
      "Recipient\030\n \001(\010\"\335\001\n\021BuyerTitleDocflow\022\022\n" +
      "\nIsFinished\030\001 \001(\010\022H\n\024BuyerTitleAttachmen" +
      "t\030\002 \001(\0132*.Diadoc.Api.Proto.Docflow.Signe",
      "dAttachment\0222\n\rSendTimestamp\030\003 \001(\0132\033.Dia" +
      "doc.Api.Proto.Timestamp\0226\n\021DeliveryTimes" +
      "tamp\030\004 \001(\0132\033.Diadoc.Api.Proto.TimestampB" +
      "\033B\031XmlBilateralDocflowProtos"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_Diadoc_Api_Proto_Docflow_XmlBilateralDocflow_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_Diadoc_Api_Proto_Docflow_XmlBilateralDocflow_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_Diadoc_Api_Proto_Docflow_XmlBilateralDocflow_descriptor,
              new java.lang.String[] { "IsFinished", "ReceiptDocflow", "BuyerTitleDocflow", "RecipientSignatureRejectionDocflow", "IsReceiptRequested", "IsDocumentSignedByRecipient", "IsDocumentRejectedByRecipient", "CanDocumentBeReceipted", "CanDocumentBeSignedBySender", "CanDocumentBeSignedOrRejectedByRecipient", },
              Diadoc.Api.Proto.Docflow.XmlBilateralDocflowProtos.XmlBilateralDocflow.class,
              Diadoc.Api.Proto.Docflow.XmlBilateralDocflowProtos.XmlBilateralDocflow.Builder.class);
          internal_static_Diadoc_Api_Proto_Docflow_BuyerTitleDocflow_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_Diadoc_Api_Proto_Docflow_BuyerTitleDocflow_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_Diadoc_Api_Proto_Docflow_BuyerTitleDocflow_descriptor,
              new java.lang.String[] { "IsFinished", "BuyerTitleAttachment", "SendTimestamp", "DeliveryTimestamp", },
              Diadoc.Api.Proto.Docflow.XmlBilateralDocflowProtos.BuyerTitleDocflow.class,
              Diadoc.Api.Proto.Docflow.XmlBilateralDocflowProtos.BuyerTitleDocflow.Builder.class);
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          Diadoc.Api.Proto.TimestampProtos.getDescriptor(),
          Diadoc.Api.Proto.Docflow.AttachmentProtos.getDescriptor(),
          Diadoc.Api.Proto.Docflow.ReceiptDocflowProtos.getDescriptor(),
          Diadoc.Api.Proto.Docflow.RecipientSignatureRejectionDocflowProtos.getDescriptor(),
        }, assigner);
  }
  
  // @@protoc_insertion_point(outer_class_scope)
}
