// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Events/ResolutionInfo.proto

package Diadoc.Api.Proto.Events;

public final class ResolutionInfoProtos {
  private ResolutionInfoProtos() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public enum ResolutionType
      implements com.google.protobuf.ProtocolMessageEnum {
    UnknownResolutionType(0, -1),
    UndefinedResolutionType(1, 0),
    Approve(2, 1),
    Disapprove(3, 2),
    ;
    
    public static final int UnknownResolutionType_VALUE = -1;
    public static final int UndefinedResolutionType_VALUE = 0;
    public static final int Approve_VALUE = 1;
    public static final int Disapprove_VALUE = 2;
    
    
    public final int getNumber() { return value; }
    
    public static ResolutionType valueOf(int value) {
      switch (value) {
        case -1: return UnknownResolutionType;
        case 0: return UndefinedResolutionType;
        case 1: return Approve;
        case 2: return Disapprove;
        default: return null;
      }
    }
    
    public static com.google.protobuf.Internal.EnumLiteMap<ResolutionType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<ResolutionType>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ResolutionType>() {
            public ResolutionType findValueByNumber(int number) {
              return ResolutionType.valueOf(number);
            }
          };
    
    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return Diadoc.Api.Proto.Events.ResolutionInfoProtos.getDescriptor().getEnumTypes().get(0);
    }
    
    private static final ResolutionType[] VALUES = {
      UnknownResolutionType, UndefinedResolutionType, Approve, Disapprove, 
    };
    
    public static ResolutionType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }
    
    private final int index;
    private final int value;
    
    private ResolutionType(int index, int value) {
      this.index = index;
      this.value = value;
    }
    
    // @@protoc_insertion_point(enum_scope:Diadoc.Api.Proto.Events.ResolutionType)
  }
  
  public interface ResolutionInfoOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // optional .Diadoc.Api.Proto.Events.ResolutionType ResolutionType = 1 [default = UnknownResolutionType];
    boolean hasResolutionType();
    Diadoc.Api.Proto.Events.ResolutionInfoProtos.ResolutionType getResolutionType();
    
    // required string Author = 2;
    boolean hasAuthor();
    String getAuthor();
    
    // optional string InitialRequestId = 3;
    boolean hasInitialRequestId();
    String getInitialRequestId();
  }
  public static final class ResolutionInfo extends
      com.google.protobuf.GeneratedMessage
      implements ResolutionInfoOrBuilder {
    // Use ResolutionInfo.newBuilder() to construct.
    private ResolutionInfo(Builder builder) {
      super(builder);
    }
    private ResolutionInfo(boolean noInit) {}
    
    private static final ResolutionInfo defaultInstance;
    public static ResolutionInfo getDefaultInstance() {
      return defaultInstance;
    }
    
    public ResolutionInfo getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return Diadoc.Api.Proto.Events.ResolutionInfoProtos.internal_static_Diadoc_Api_Proto_Events_ResolutionInfo_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return Diadoc.Api.Proto.Events.ResolutionInfoProtos.internal_static_Diadoc_Api_Proto_Events_ResolutionInfo_fieldAccessorTable;
    }
    
    private int bitField0_;
    // optional .Diadoc.Api.Proto.Events.ResolutionType ResolutionType = 1 [default = UnknownResolutionType];
    public static final int RESOLUTIONTYPE_FIELD_NUMBER = 1;
    private Diadoc.Api.Proto.Events.ResolutionInfoProtos.ResolutionType resolutionType_;
    public boolean hasResolutionType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public Diadoc.Api.Proto.Events.ResolutionInfoProtos.ResolutionType getResolutionType() {
      return resolutionType_;
    }
    
    // required string Author = 2;
    public static final int AUTHOR_FIELD_NUMBER = 2;
    private java.lang.Object author_;
    public boolean hasAuthor() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public String getAuthor() {
      java.lang.Object ref = author_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          author_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getAuthorBytes() {
      java.lang.Object ref = author_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        author_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional string InitialRequestId = 3;
    public static final int INITIALREQUESTID_FIELD_NUMBER = 3;
    private java.lang.Object initialRequestId_;
    public boolean hasInitialRequestId() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public String getInitialRequestId() {
      java.lang.Object ref = initialRequestId_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          initialRequestId_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getInitialRequestIdBytes() {
      java.lang.Object ref = initialRequestId_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        initialRequestId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    private void initFields() {
      resolutionType_ = Diadoc.Api.Proto.Events.ResolutionInfoProtos.ResolutionType.UnknownResolutionType;
      author_ = "";
      initialRequestId_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasAuthor()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, resolutionType_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getAuthorBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, getInitialRequestIdBytes());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, resolutionType_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getAuthorBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getInitialRequestIdBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static Diadoc.Api.Proto.Events.ResolutionInfoProtos.ResolutionInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static Diadoc.Api.Proto.Events.ResolutionInfoProtos.ResolutionInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static Diadoc.Api.Proto.Events.ResolutionInfoProtos.ResolutionInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static Diadoc.Api.Proto.Events.ResolutionInfoProtos.ResolutionInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static Diadoc.Api.Proto.Events.ResolutionInfoProtos.ResolutionInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static Diadoc.Api.Proto.Events.ResolutionInfoProtos.ResolutionInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static Diadoc.Api.Proto.Events.ResolutionInfoProtos.ResolutionInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static Diadoc.Api.Proto.Events.ResolutionInfoProtos.ResolutionInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static Diadoc.Api.Proto.Events.ResolutionInfoProtos.ResolutionInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static Diadoc.Api.Proto.Events.ResolutionInfoProtos.ResolutionInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(Diadoc.Api.Proto.Events.ResolutionInfoProtos.ResolutionInfo prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements Diadoc.Api.Proto.Events.ResolutionInfoProtos.ResolutionInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return Diadoc.Api.Proto.Events.ResolutionInfoProtos.internal_static_Diadoc_Api_Proto_Events_ResolutionInfo_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return Diadoc.Api.Proto.Events.ResolutionInfoProtos.internal_static_Diadoc_Api_Proto_Events_ResolutionInfo_fieldAccessorTable;
      }
      
      // Construct using Diadoc.Api.Proto.Events.ResolutionInfoProtos.ResolutionInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        resolutionType_ = Diadoc.Api.Proto.Events.ResolutionInfoProtos.ResolutionType.UnknownResolutionType;
        bitField0_ = (bitField0_ & ~0x00000001);
        author_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        initialRequestId_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return Diadoc.Api.Proto.Events.ResolutionInfoProtos.ResolutionInfo.getDescriptor();
      }
      
      public Diadoc.Api.Proto.Events.ResolutionInfoProtos.ResolutionInfo getDefaultInstanceForType() {
        return Diadoc.Api.Proto.Events.ResolutionInfoProtos.ResolutionInfo.getDefaultInstance();
      }
      
      public Diadoc.Api.Proto.Events.ResolutionInfoProtos.ResolutionInfo build() {
        Diadoc.Api.Proto.Events.ResolutionInfoProtos.ResolutionInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private Diadoc.Api.Proto.Events.ResolutionInfoProtos.ResolutionInfo buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        Diadoc.Api.Proto.Events.ResolutionInfoProtos.ResolutionInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public Diadoc.Api.Proto.Events.ResolutionInfoProtos.ResolutionInfo buildPartial() {
        Diadoc.Api.Proto.Events.ResolutionInfoProtos.ResolutionInfo result = new Diadoc.Api.Proto.Events.ResolutionInfoProtos.ResolutionInfo(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.resolutionType_ = resolutionType_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.author_ = author_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.initialRequestId_ = initialRequestId_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof Diadoc.Api.Proto.Events.ResolutionInfoProtos.ResolutionInfo) {
          return mergeFrom((Diadoc.Api.Proto.Events.ResolutionInfoProtos.ResolutionInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(Diadoc.Api.Proto.Events.ResolutionInfoProtos.ResolutionInfo other) {
        if (other == Diadoc.Api.Proto.Events.ResolutionInfoProtos.ResolutionInfo.getDefaultInstance()) return this;
        if (other.hasResolutionType()) {
          setResolutionType(other.getResolutionType());
        }
        if (other.hasAuthor()) {
          setAuthor(other.getAuthor());
        }
        if (other.hasInitialRequestId()) {
          setInitialRequestId(other.getInitialRequestId());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasAuthor()) {
          
          return false;
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              Diadoc.Api.Proto.Events.ResolutionInfoProtos.ResolutionType value = Diadoc.Api.Proto.Events.ResolutionInfoProtos.ResolutionType.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                resolutionType_ = value;
              }
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              author_ = input.readBytes();
              break;
            }
            case 26: {
              bitField0_ |= 0x00000004;
              initialRequestId_ = input.readBytes();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional .Diadoc.Api.Proto.Events.ResolutionType ResolutionType = 1 [default = UnknownResolutionType];
      private Diadoc.Api.Proto.Events.ResolutionInfoProtos.ResolutionType resolutionType_ = Diadoc.Api.Proto.Events.ResolutionInfoProtos.ResolutionType.UnknownResolutionType;
      public boolean hasResolutionType() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public Diadoc.Api.Proto.Events.ResolutionInfoProtos.ResolutionType getResolutionType() {
        return resolutionType_;
      }
      public Builder setResolutionType(Diadoc.Api.Proto.Events.ResolutionInfoProtos.ResolutionType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        resolutionType_ = value;
        onChanged();
        return this;
      }
      public Builder clearResolutionType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        resolutionType_ = Diadoc.Api.Proto.Events.ResolutionInfoProtos.ResolutionType.UnknownResolutionType;
        onChanged();
        return this;
      }
      
      // required string Author = 2;
      private java.lang.Object author_ = "";
      public boolean hasAuthor() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public String getAuthor() {
        java.lang.Object ref = author_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          author_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setAuthor(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        author_ = value;
        onChanged();
        return this;
      }
      public Builder clearAuthor() {
        bitField0_ = (bitField0_ & ~0x00000002);
        author_ = getDefaultInstance().getAuthor();
        onChanged();
        return this;
      }
      void setAuthor(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000002;
        author_ = value;
        onChanged();
      }
      
      // optional string InitialRequestId = 3;
      private java.lang.Object initialRequestId_ = "";
      public boolean hasInitialRequestId() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public String getInitialRequestId() {
        java.lang.Object ref = initialRequestId_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          initialRequestId_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setInitialRequestId(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        initialRequestId_ = value;
        onChanged();
        return this;
      }
      public Builder clearInitialRequestId() {
        bitField0_ = (bitField0_ & ~0x00000004);
        initialRequestId_ = getDefaultInstance().getInitialRequestId();
        onChanged();
        return this;
      }
      void setInitialRequestId(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000004;
        initialRequestId_ = value;
        onChanged();
      }
      
      // @@protoc_insertion_point(builder_scope:Diadoc.Api.Proto.Events.ResolutionInfo)
    }
    
    static {
      defaultInstance = new ResolutionInfo(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:Diadoc.Api.Proto.Events.ResolutionInfo)
  }
  
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_Diadoc_Api_Proto_Events_ResolutionInfo_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_Diadoc_Api_Proto_Events_ResolutionInfo_fieldAccessorTable;
  
  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\033Events/ResolutionInfo.proto\022\027Diadoc.Ap" +
      "i.Proto.Events\"\222\001\n\016ResolutionInfo\022V\n\016Res" +
      "olutionType\030\001 \001(\0162\'.Diadoc.Api.Proto.Eve" +
      "nts.ResolutionType:\025UnknownResolutionTyp" +
      "e\022\016\n\006Author\030\002 \002(\t\022\030\n\020InitialRequestId\030\003 " +
      "\001(\t*n\n\016ResolutionType\022\"\n\025UnknownResoluti" +
      "onType\020\377\377\377\377\377\377\377\377\377\001\022\033\n\027UndefinedResolution" +
      "Type\020\000\022\013\n\007Approve\020\001\022\016\n\nDisapprove\020\002B\026B\024R" +
      "esolutionInfoProtos"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_Diadoc_Api_Proto_Events_ResolutionInfo_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_Diadoc_Api_Proto_Events_ResolutionInfo_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_Diadoc_Api_Proto_Events_ResolutionInfo_descriptor,
              new java.lang.String[] { "ResolutionType", "Author", "InitialRequestId", },
              Diadoc.Api.Proto.Events.ResolutionInfoProtos.ResolutionInfo.class,
              Diadoc.Api.Proto.Events.ResolutionInfoProtos.ResolutionInfo.Builder.class);
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }
  
  // @@protoc_insertion_point(outer_class_scope)
}
